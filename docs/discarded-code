 /**
     * uncomment or type in whatever files you need to make.
     * creates float point test cases.
     * if the file exists, it will be overwritten with this new case.
     */
    public static void generateDoubleFiles() {
        TestCaseGenerator gtc = new TestCaseGenerator();
//        gtc.generateDoubles((int) Math.pow(2, 20), -500, 500, "Double_Unsorted_2^20");
//        gtc.generateDoubles((int) Math.pow(2, 21), -500, 500, "Double_Unsorted_2^21");
//        gtc.generateDoubles((int) Math.pow(2, 22), -500, 500, "Double_Unsorted_2^22");
//        gtc.generateDoubles((int) Math.pow(2, 23), -500, 500, "Double_Unsorted_2^23");
//        gtc.generateDoubles((int) Math.pow(2, 24), -500, 500, "Double_Unsorted_2^24");
//        gtc.generateDoubles((int) Math.pow(2, 25), -500, 500, "Double_Unsorted_2^25");
//        gtc.generateDoubles((int) Math.pow(2, 26), -500, 500, "Double_Unsorted_2^26");
//        gtc.generateDoubles((int) Math.pow(2, 27), -500, 500, "Double_Unsorted_2^27");
//        gtc.generateDoubles((int) Math.pow(2, 28), -500, 500, "Double_Unsorted_2^28")
//        gtc.generateDoubles((int) Math.pow(2, 29), -500, 500, "Double_Unsorted_2^29"); // -Xmx6g
//        gtc.generateDoubles((int) Math.pow(2, 30), -500, 500, "Double_Unsorted_2^30"); // -Xmx10g
    } // end method



/**
     * uncomment or type in whatever files you need to make.
     * creates whole number/integer test cases.
     * if the file exists, it will be overwritten with this new case.
     */
    public static void generateIntFiles() {
        TestCaseGenerator gtc = new TestCaseGenerator();
//        gtc.generateInts((int) Math.pow(2, 20), -500, 500, false, "Integer_Unsorted_2^20");
//        gtc.generateInts((int) Math.pow(2, 21), -500, 500, false, "Integer_Unsorted_2^21");
//        gtc.generateInts((int) Math.pow(2, 22), -500, 500, false, "Integer_Unsorted_2^22");
//        gtc.generateInts((int) Math.pow(2, 23), -500, 500, false, "Integer_Unsorted_2^23");
//        gtc.generateInts((int) Math.pow(2, 24), -500, 500, false, "Integer_Unsorted_2^24");
//        gtc.generateInts((int) Math.pow(2, 25), -500, 500, false, "Integer_Unsorted_2^25");
//        gtc.generateInts((int) Math.pow(2, 26), -500, 500, false, "Integer_Unsorted_2^26");
//        gtc.generateInts((int) Math.pow(2, 27), -500, 500, false, "Integer_Unsorted_2^27");
//        gtc.generateInts((int) Math.pow(2, 28), -500, 500, false, "Integer_Unsorted_2^28");
//        gtc.generateInts((int) Math.pow(2, 29), -500, 500, false, "Integer_Unsorted_2^29");
//        gtc.generateInts((int) Math.pow(2, 29), -500, 500, false, "Integer_Unsorted_2^29");
     } // end method


 public static void runAllDoubleBenchmarks(int low, int high, int numNumbers, int numTestCases)
 public static void runAllIntBenchmarks(int low, int high, int numNumbers, int numTestCases)


//    /**
//     * method common to all sort classes to read in a test case file
//     * from basic java io operations.
//     * @param path file path given, will be ultimately from the command line/from driver
//     *             note that the test cases are all given as csv format
//     */
//    public void initArray(String path, int howMany) {
//        toSort = new short[howMany]; int counter = 0;
//        try {
//            Scanner s = new Scanner(new File(path)).useDelimiter(",");
//            while (s.hasNext()) {
//                toSort[counter] = s.nextShort(); counter++;
//            } // end loop
//        } catch (FileNotFoundException e) {
//            throw new RuntimeException("Oops, no file there. Love, mergesort.");
//        } // end try/catch
//
//    } // end method